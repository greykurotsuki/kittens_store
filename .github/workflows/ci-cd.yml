# This is a basic workflow to help you get started with Actions

name: CI/CD 

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    #Define environment variable for ruby version
    strategy:
      matrix:
        ruby-version: ['2.4.9']
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/kittens-test:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
      - name: Run docker compose
        run: docker-compose up -d
        
      - name: Create/migrate/seed for Postgresql
        run: docker-compose run web bundle exec rake db:create db:migrate db:seed
        
      - name: Run auto-test
        run: docker-compose run web bundle exec rspec
        
  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['12.x']
        appname: ['codedeploy-main']
        deploy-group: ['main']
        s3-bucket: ['aws-codedeploy-deploy']
        s3-filename: ['aws-codedeploy-${{ github.sha }}']
        region: ['us-west-3']
    needs: build
    
    steps:
     - uses: actions/checkout@v2
     - uses: ruby/setup-ruby@v1
       with:
         ruby-version: 2.4.9 # Not needed with a .ruby-version file
         bundler-cache: true # runs 'bundle install' and caches installed gems automatically
     - run: ls -l
          
      # Configure AWS credentials
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ matrix.region }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           ECR_REPOSITORY: docker_nodejs_demo
#           IMAGE_TAG: nodejs_demo_image
#         run: |
#           docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
#           docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
